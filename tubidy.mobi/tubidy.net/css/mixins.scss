/* responsive */
@mixin breakpoint($class) {
  @if $class == xs {
    @media (max-width: 480px) { @content; }
  }
 
  @else if $class == sm {
    @media (max-width: 767px) { @content; }
  }
 
  @else if $class == md {
    @media (min-width: 768px) and (max-width: 979px) { @content; }
  }
  @else if $class == smd {
    @media (min-width: 768px) and (max-width: 992px) { @content; }
  }

  @else if $class == cb {
    @media (max-width: 990px) { @content; }
  }

  @else if $class == lg {
    @media (min-width: 1200px) { @content; }
  }
  @else if $class == eg {
    @media (min-width: 980px) and (max-width: 1199px) { @content; }
  }
 
  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg";
  }
}

/* border rdius @include border-radius(0px) */
@mixin border-radius($radius) {
  -webkit-border-radius: $radius !important;
     -moz-border-radius: $radius !important;
      -ms-border-radius: $radius !important;
          border-radius: $radius !important;
}


/* box shadow*/

@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
  -webkit-box-shadow:$top $left $blur $color #{$inset};
  -moz-box-shadow:$top $left $blur $color #{$inset};
  box-shadow:$top $left $blur $color #{$inset};
}
// @include box-shadow(0, 1px, 1px, rgba(0, 0, 0, 1), inset);

@mixin box-shadow($left:1px, $top:1px, $blur:2px, $color:#d4d4d4, $inset:"") {
      -webkit-box-shadow:$left $top $blur $color #{$inset};
      -moz-box-shadow:$left $top $blur $color #{$inset};
      box-shadow:$left $top $blur $color #{$inset};
}

/* opacity */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
// @include opacity(0.8);

/* clearfix */
/* http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/ */
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
//@extend %clearfix;

/* transition */
@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}
//@include transition(all, 0.2s, ease-in-out);
/* */
